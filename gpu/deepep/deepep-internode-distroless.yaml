apiVersion: v1
kind: Service
metadata:
  name: deepep-service
spec:
  clusterIP: None
  selector:
    job-name: deepep-job

---
apiVersion: batch/v1
kind: Job
metadata:
  name: deepep-job
spec:
  completions: 2
  parallelism: 2
  completionMode: Indexed
  template:
    metadata:
      labels:
        k8s-app: deepep-testbed
    spec:
      restartPolicy: Never
      subdomain: deepep-service
      dnsPolicy: ClusterFirstWithHostNet
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: cloud.google.com/gke-accelerator
                    operator: In
                    values:
                      - nvidia-b200
                  - key: cloud.google.com/gke-nodepool
                    operator: In
                    values:
                      - a4-highgpu-ubuntu
                  - key: cloud.google.com/gke-os-distribution
                    operator: In
                    values:
                      - ubuntu
      tolerations:
        - operator: "Exists"
      hostNetwork: true
      hostPID: true
      volumes:
        - name: root
          hostPath:
            path: /
        - name: shared-memory
          emptyDir:
            medium: "Memory"
            sizeLimit: 250Gi
      containers:
        - image: gke.gcr.io/gke-distroless/bash:latest
          name: deepep-testbed
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          volumeMounts:
            - name: root
              mountPath: /
            - name: shared-memory
              mountPath: /dev/shm
          env:
            - name: NVSHMEM_IBGDA_SUPPORT
              value: "1"
            - name: NVSHMEM_USE_GDRCOPY
              value: "1"
            - name: GDRCOPY_HOME
              value: /opt/deepep/gdrcopy
            - name: NVSHMEM_HOME
              value: /opt/deepep/nvshmem
            - name: USE_NVPEERMEM
              value: "1"
            - name: CUDA_HOME
              value: /usr/local/cuda
            - name: TORCH_CUDA_ARCH_LIST_B200
              value: "10.0"
          command:
            - '/bin/bash'
            - '-c'
            - |
              set -ex
              # export DEBIAN_FRONTEND=noninteractive
              # export PYTHONPATH=/usr/local/nvidia/deepep:$PYTHONPATH
              # export LD_LIBRARY_PATH=/usr/local/nvidia/lib64:$LD_LIBRARY_PATH

              # apt-get update -y && apt install git python3-pip -y -qq
              # apt install python3.12-dev python3.12 ninja-build cmake build-essential devscripts debhelper dkms -y -qq
              # pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu129  --break-system-packages

              export RANK=${JOB_COMPLETION_INDEX}
              export WORLD_SIZE=2
              export MASTER_ADDR=deepep-job-0.deepep-service
              
              # Clone or use existing DeepEP
              if [ ! -d "/tmp/deepep_build" ]; then
                git clone https://github.com/deepseek-ai/DeepEP.git /tmp/deepep_build
              fi
              cd /tmp/deepep_build

              echo "Starting test with RANK=${RANK}, WORLD_SIZE=${WORLD_SIZE}, MASTER_ADDR=${MASTER_ADDR}"
              python3 tests/test_internode.py