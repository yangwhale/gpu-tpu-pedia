apiVersion: v1
kind: Service
metadata:
  name: deepep-service
spec:
  clusterIP: None
  selector:
    job-name: deepep-job

---
apiVersion: batch/v1
kind: Job
metadata:
  name: deepep-job
spec:
  completions: 2
  parallelism: 2
  completionMode: Indexed
  template:
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                    - ubuntu
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true
      restartPolicy: Never
      subdomain: deepep-service
      containers:
      - name: test
        image: nvidia/cuda:12.8.1-cudnn-devel-ubuntu24.04
        resources:
          limits:
            nvidia.com/gpu: "8"
        volumeMounts:
          - name: nvidia
            mountPath: /usr/local/nvidia
          - name: shared-memory
            mountPath: /dev/shm
        command:
          - '/bin/bash'
          - '-c'
          - |
            set -ex
            export DEBIAN_FRONTEND=noninteractive
            export PYTHONPATH=/usr/local/nvidia/deepep:$PYTHONPATH
            export LD_LIBRARY_PATH=/usr/local/nvidia/lib64:$LD_LIBRARY_PATH

            apt-get update -y && apt install git python3-pip -y -qq 
            apt install python3.12-dev python3.12 ninja-build cmake build-essential devscripts debhelper dkms -y -qq
            pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu129  --break-system-packages

            export RANK=${JOB_COMPLETION_INDEX}
            export WORLD_SIZE=2
            export MASTER_ADDR=deepep-job-0.deepep-service
            git clone https://github.com/deepseek-ai/DeepEP.git && cd ./DeepEP

            echo "Starting test with RANK=${RANK}, WORLD_SIZE=${WORLD_SIZE}, MASTER_ADDR=${MASTER_ADDR}"
            python3 tests/test_internode.py

            sleep infinity
        securityContext:
          privileged: true
      volumes:
        - name: nvidia
          hostPath:
            path: /home/kubernetes/bin/nvidia
        - name: shared-memory
          emptyDir:
            medium: "Memory"
            sizeLimit: 250Gi
